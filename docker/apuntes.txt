//inicio
    docker run hello-world

//contenedores
    es la pieza fundamental de docker
    es una agrupación de uno o más procesos
    ejecuta sus procesos de forma nativa
    los contenedores ven su universo y no fuera de el
    no tienen forma de consumir más recursos de las que el contenedor les permite

//el estado
    Para listar todos los contenedores de Docker, utilizamos el comando :
        docker ps -a
    Podemos inspeccionar un contenedor en específico utilizando:
        docker inspect nombreDelContenedor

//docker run
    docker run -it ubuntu
    docker exec -it nombre bash

//--detach (-d)
    docker run -d --name server nginx

//exponiendo contenedores al mundo exterior
    Los contenedores están aislados del sistema y a nivel de red, cada contenedor tiene su
    propia stack de net y sus propios puertos.
    Debemos redirigir los puertos del contenedor a los de la computadora y lo podemos
    hacer al utilizar este comando:
        docker run -d --name server -p 8080:80 nombreDelContenedor

//DATOS EN Docker 
    ->MOUNTS
        Sudo docker run -d --name mongodb_prueba mongo 
        docker exec -it db  bash

        con esto podemos guardar data en una carpeta y consta en montar esta data
        al contenedor.

        sudo docker run -d -v /USer/alvaro/platzi/prueba:/data/db --name mongodb_prueba mongo

    ->VOLUMS
        A pesar de que no es lo más divertido que tiene Docker, esta herramienta
        nos permite recuperar datos que podíamos dar por perdido.

        Existen tres maneras de hacer permanencia de datos:

            Bind mount
            Volume
            tmpfs mount

        *dokcer vlume prune

        *docker volume create nombreDelVolumen
        *docker volum ls
        *docker run -d --name nombrE --mount src=nombreDelVolumen,dst=/RUTA/ruta mongo


//IMAGENES
    Las imágenes son un componente fundamental de Docker y sin ellas los contenedores
    no tendrían sentido. Estas imágenes son fundamentalmente plantillas o templates.
    Algo que debemos tener en cuenta es que las imágenes no van a cambiar, es decir,
    una vez este realizada no la podremos cambiar.

    *docker pull redis
    *docker image ls
     ************** docker pull ubuntu:1804 *****************

//CREAR TUS PROPIAS IMAGANES
    Vamos a crear nuestras propias imágenes, necesitamos un archivo llamado DockerFile que
    es la ““receta”” que utiliza Docker para crear imágenes.

    *Es importante que el DockerFile siempre empiece con un ““FROM”” sino, no va a funcionar.*

    **DockerFile**
    **************************
    FROM ubuntu

    RUN touch /usr/src/hola-platzi
    **************************

    El flujo para construir en Docker siempre es así:
        *Dockerfile – **build **–> Imágen – run --> Contenedor
        *docker build -t ubuntu:platzi .

//SISTEMA DE CAPAAAAAAAAAAAAAAAAAAAAAAAASSSSSSSSS///////////////////////
ASDSAD          SADSADSADSADSA
ASDSAD      SDASDF          DSADSAD 

SADSAD          DSAD                        DSADSDSA
//////////////////////////////////////////////////////////////////////////


